// Copyright 2019 The GraphicsFuzz Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package gfauto;

import "gfauto/common.proto";


// A list of devices. Also includes the |active_device_names|, which are the ones that will be used when fuzzing
// (so this is really more than just a list).
message DeviceList {
  repeated string active_device_names = 1;
  repeated Device devices = 2;
}

// A device, such as an Android device or the host machine with its GPU and drivers.
message Device {
  string name = 1;
  oneof device {
    DevicePreprocess preprocess = 2;
    DeviceSwiftShader swift_shader = 3;
    DeviceHost host = 4;
    DeviceAndroid android = 5;
    DeviceShaderCompiler shader_compiler = 7;
  }
  // A device can specify/override some binaries. E.g. you may want several SwiftShader "devices" with different
  // versions or configurations of SwiftShader.
  repeated Binary binaries = 6;
}

message DeviceSwiftShader {
}

// A virtual device that just executes all steps up until the actual graphics hardware or simulator is needed. This
// helps to find bugs in, say, spirv-opt.
message DevicePreprocess {

}

// The host machine on which we are running gfauto.
message DeviceHost {

}

message DeviceAndroid {
  string serial = 1;
  string model = 2;
}

// A virtual device that just executes an offline shader compiler.
message DeviceShaderCompiler {
  string binary = 1;
  repeated string args = 2;
}
