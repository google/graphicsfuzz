// Copyright 2019 The GraphicsFuzz Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package gfauto;


// Defines a binary (or really, any file).
// Note that Binary is used to:
//  - Describe which version of a binary to find/download and use in settings.json (Settings proto) or test.json
//    (Test proto) given the |name|, |tags|, and |version|. |path| is set to "".
//  - Define a specific binary file in recipe.json (Recipe proto) or artifact.json (Artifact proto). |path| is a
//    relative path to the binary, always using "/" as the directory separator.
message Binary {

  // E.g. glslangValidator.
  string name = 1;

  // This should be a list of strings (tags) containing the platform and other details.
  // E.g. "Linux", "x64", "Debug", "malloc", "msan".
  // When being used to specify how to *find* a binary, the tags must be found in the binary definition.
  // E.g. "Debug", "msan".
  // Typically, the current platform will also need to be found (e.g. "Linux") before the Binary can be chosen for use.
  repeated string tags = 2;

  // When describing which version of a binary to find/download and use in settings.json (Settings proto) or test.json
  // (Test proto), is set to the empty string "". However, you can provide the path of a binary for testing purposes, in
  // which case you will most likely want to provide the absolute path to the binary.
  // When defining a specific binary file in recipe.json (Recipe proto) or artifact.json (Artifact proto), gives the
  // path (always using "/" as the directory separator) relative from the artifact.json/recipe.json file to the binary,
  // after the ArchiveSet has been extracted.
  string path = 3;

  // This should typically be a hash of some kind.
  string version = 4;
}

message Archive {
  // The URL from which to download the archive.
  string url = 1;

  // The output location for the downloaded archive.
  string output_file = 2;

  // The directory in which the archive will be extracted.
  string output_directory = 3;
}

message ArchiveSet {
  // A list of Archives; all of these will be downloaded and extracted when used in a recipe.
  // See RecipeDownloadAndExtractArchiveSet proto.
  repeated Archive archives = 1;

  // A list of Binaries that can be found in the artifact. See ArtifactMetadataExtractedArchiveSet proto.
  repeated Binary binaries = 2;
}
